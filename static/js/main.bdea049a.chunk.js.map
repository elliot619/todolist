{"version":3,"sources":["components/Haeder.js","redux/actions/index.js","redux/reducers/index.js","redux/store/index.js","components/TodoAddChild.js","components/TodoChild.js","components/TodoBody.js","components/TodoMain.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","React","Component","updateStorage","list","localStorage","setItem","JSON","stringify","initialState","name","children","rootReducer","state","arguments","length","undefined","action","type","payload","tmp","Object","assign","isGrandchild","childId","push","child","actions","parent","splice","index","getItem","parse","store","createStore","TodoAddChild","childName","error","updateState","event","_this","setState","defineProperty","target","value","addChild","dispatch","props","isGrandChild","onClick","this","maxLength","minLength","placeholder","onChange","TodoChild","opened","deleteItem","confirmAlert","message","buttons","label","_this2","href","lib","isOpened","TodoAddChild_TodoAddChild","map","c","i","TodoChild_GrandChild","key","GrandChild","_this3","TodoBody","TodoChild_TodoChild","connect","TodoMain","listName","hasList","createList","objectSpread","role","components_TodoBody","App","Haeder_Header","es","components_TodoMain","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bdea049a.chunk.js","sourcesContent":["import React from \"react\";\n//import \"../styles/App.scss\";\n\nexport default class Header extends React.Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-dark bg-dark box-shadow\">\n                <div className=\"container d-flex justify-content-between\">\n                    <div className=\"navbar-brand d-flex align-items-center\">\n                        <strong>listy</strong>\n                    </div>\n                    <div className=\"navbar-expand d-flex text-white\">Elliot Chavez, 2019</div>\n                </div>\n            </nav>);\n    }\n}","export function addChild(state, payload) {\n    let tmp = Object.assign({}, state.list);\n\n    if (payload.isGrandchild)\n        tmp.children[payload.childId].children.push(payload.child);\n    else\n        tmp.children.push(payload.child);\n\n    updateStorage(tmp);\n\n    return {list: tmp};\n}\n\nexport function removeChild(state, payload) {\n    let tmp = Object.assign({}, state.list);\n\n    if (payload.isGrandchild)\n        tmp.children[payload.parent].children.splice(payload.index, 1);\n    else\n        tmp.children.splice(payload.index, 1);\n\n    updateStorage(tmp);\n\n    return {list: tmp};\n}\n\n\nexport function createList(state, payload) {\n    let tmp = Object.assign({}, state);\n\n    tmp.list.name = payload.name;\n\n    updateStorage(tmp.list);\n\n    return tmp;\n}\n\nexport function initList() {\n    const tmp = localStorage.getItem(\"list\");\n\n    if (tmp)\n        return {list: JSON.parse(tmp)};\n}\n\nfunction updateStorage(list) {\n    //TODO: For purpose of demonstration and simplicity I used localStorage to save the list, but of course that a database will be a better option for this\n    localStorage.setItem(\"list\", JSON.stringify(list));\n}\n","import * as actions from '../actions';\n\nconst initialState = {\n    list: {\n        name: \"\",\n        children: []\n\n    }\n};\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_CHILD':\n            return actions.addChild(state, action.payload);\n        case 'REMOVE_CHILD':\n            return actions.removeChild(state, action.payload);\n        case 'CREATE_LIST':\n            return actions.createList(state, action.payload);\n        case 'INIT_LIST':\n            return actions.initList();\n        default:\n            return state;\n    }\n};\n\nexport default rootReducer;","import {createStore} from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer);\nexport default store;","import React from 'react';\nimport store from '../redux/store';\n\nexport default class TodoAddChild extends React.Component {\n    state = {\n        childName: \"\",\n        error: \"\"\n    };\n\n    render() {\n        return (\n            <div className=\"form-group col-sm-10\">\n                <div className=\"input-group \">\n                    <div className=\"input-group-prepend\">\n                        <button onClick={this.addChild}\n                                className={!this.props.isGrandChild ? \"btn btn-success\" : \"btn btn-info\"}>+\n                        </button>\n                    </div>\n                    <input type=\"text\" maxLength=\"20\" minLength=\"5\" name=\"childName\" value={this.state.childName}\n                           placeholder={!this.props.isGrandChild ? \"Add task\" : \"Add sub task\"}\n                           onChange={this.updateState} className=\"form-control\"/>\n                </div>\n                {this.state.error.length > 0 && <p className=\"help-block text-danger\">{this.state.error}</p>}\n\n            </div>\n        );\n    }\n\n    updateState = (event) => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    addChild = () => {\n\n        if (this.state.childName.length > 4) {\n            store.dispatch({\n                type: \"ADD_CHILD\",\n                payload: {\n                    child: {\n                        name: this.state.childName,\n                        children: []\n                    },\n                    isGrandchild: this.props.isGrandChild,\n                    childId: this.props.index\n                }\n            });\n\n            this.setState({childName: \"\", error: \"\"});\n        } else {\n            this.setState({\"error\": \"Too short\"});\n        }\n    }\n}","import React from 'react';\nimport TodoAddChild from \"./TodoAddChild\";\nimport store from '../redux/store';\nimport {Collapse} from 'react-collapse';\nimport {confirmAlert} from \"react-confirm-alert\";\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nexport default class TodoChild extends React.Component {\n    state = {opened: false};\n\n    render() {\n        return (\n            <li className=\"list__child\">\n                <label>\n                    <a href=\"#\" className=\"badge badge-danger\" onClick={this.deleteItem}>x</a>\n                    &nbsp;\n                    <button className=\"collapse-trigger\"\n                            onClick={() => this.setState({opened: !this.state.opened})}>{this.props.name}</button>\n                </label>\n                <Collapse isOpened={this.state.opened}>\n                    <TodoAddChild isGrandChild={true} index={this.props.index}/>\n                    <ul className=\"list__grandchildren collapsable\">\n                        {this.props.children.map((c, i) => <GrandChild name={c.name} key={i} index={i}\n                                                                       parent={this.props.index}/>)}\n                    </ul>\n                </Collapse>\n            </li>\n        );\n    }\n\n    deleteItem = () => {\n        confirmAlert({\n            message: 'Are you sure to delete this task?.',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        store.dispatch({type: \"REMOVE_CHILD\", payload: {index: this.props.index}});\n                    }\n                },\n                {\n                    label: 'No'\n                }\n            ]\n        });\n\n    };\n}\n\nclass GrandChild extends React.Component {\n    render() {\n        return (\n            <li className=\"list__grandchild\">\n                <label>\n                    <a href=\"#\" className=\"badge badge-danger\" onClick={this.deleteItem}>x</a>\n                    &nbsp;\n                    <label className=\"list__child__label\">{this.props.name}</label>\n                </label>\n            </li>);\n    }\n\n\n    deleteItem = () => {\n        confirmAlert({\n            message: 'Are you sure to delete this sub task?.',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        store.dispatch({\n                            type: \"REMOVE_CHILD\",\n                            payload: {parent: this.props.parent, index: this.props.index, isGrandchild: true}\n                        });\n                    }\n                },\n                {\n                    label: 'No'\n                }\n            ]\n        });\n\n    }\n}","import React from 'react';\nimport TodoChild from \"./TodoChild\";\nimport TodoAddChild from \"./TodoAddChild\";\nimport {connect} from \"react-redux\";\n\nclass TodoBody extends React.Component {\n    render() {\n        return (\n            <div className=\"list\">\n                <h1 className=\"h2\">{this.props.list.name}</h1>\n                <TodoAddChild isGrandchild={false} childId={-1}/>\n                <ul className=\"list__items\">\n                    {this.props.list.children.map((c, i) => <TodoChild key={i} index={i} name={c.name} children={c.children}/>)}\n                </ul>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    list: state.list\n});\n\nexport default connect(mapStateToProps)(TodoBody);","import React from 'react';\nimport TodoBody from './TodoBody';\nimport {connect} from 'react-redux';\nimport store from '../redux/store';\n\nclass TodoMain extends React.Component {\n    state = {\n        listName: \"\",\n        error: \"\"\n    };\n\n    componentWillMount() {\n        store.dispatch({type: \"INIT_LIST\", payload: {}});\n    }\n\n    render() {\n        return (\n            <main role=\"main\" className=\"container\">\n                {!this.hasList() && <div className=\"createList\">\n                    <label className=\"h5\">Wow, no to-do list yet. Start by\n                        typing it's name</label>\n                    <input type=\"text\" maxLength=\"30\" name=\"listName\" value={this.state.listName}\n                           onChange={this.updateState} className=\"form-control col-md-5 list__name\"/>\n                    <p className=\"help-block text-danger\">{this.state.error}</p>\n                    <button className=\"btn btn-info\" onClick={this.createList}>Create list</button>\n                </div>}\n                {this.hasList() && <TodoBody/>}\n            </main>);\n    }\n\n    updateState = (event) => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    hasList = () => {\n        return this.props.list.name && this.props.list.name.length > 0;\n    };\n\n    createList = () => {\n        if (this.state.listName.length >= 5) {\n            let tmp = {...this.state};\n\n            store.dispatch({type: \"CREATE_LIST\", payload: {name: this.state.listName}});\n\n            tmp.error = \"\";\n            tmp.listName = \"\";\n\n            this.setState(tmp);\n        } else {\n            this.setState({\"error\": \"Too short\"})\n        }\n    };\n}\n\nconst mapStateToProps = (state) => ({\n    list: state.list\n});\n\nexport default connect(mapStateToProps)(TodoMain);","import React from 'react';\nimport Header from \"../components/Haeder\";\nimport TodoMain from \"../components/TodoMain\";\nimport {Provider} from \"react-redux\";\nimport store from '../redux/store';\nimport '../styles/App.css';\n\n\nfunction App() {\n    return (\n        <div>\n            <Header/>\n            <Provider store={store}>\n                <TodoMain/>\n            </Provider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  'bootstrap-css-only';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}